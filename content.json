[{"title":"vue2.0下拉刷新和上拉加载组件","date":"2017-01-02T15:45:34.000Z","path":"posts/uncategorized/2017-01-02-vue2.0下拉刷新和上拉加载组件.html","text":"最近一直在用vue做项目,闲来无事就整理一下项目中所用到的组件,现在网上基于vue2的下拉刷新的组件并没有什么很好用的,想着就自己写一套吧.刚开始写的配置内容比较少,以后会持续增加. 组件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179&lt;template&gt; &lt;div class=\"m-pull-refresh view\"&gt; &lt;div :id=\"scrollId\" class=\"wrapper\"&gt; &lt;div class=\"xs-container\" id=\"container\"&gt; &lt;div class=\"xs-content\" id=\"xs-content\"&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;/** * pullDown &amp; pullUp * @module components/pull-refresh * @desc 下拉刷新和上拉加载组件 * @param bol usePullDown - 是否使用下拉刷新 default: false * @param bol usePullUp - 是否使用上拉加载 default: false * @param obj pulldownConfig - 下拉刷新自定义配置 * @param obj pullupConfig - 上拉加载自定义配置 * @example * &lt;cubee-pull-refresh ref=\"pullRefreshEl\" :usePullDown=\"true\" :usePullUp=\"true\" @on-pulldown=\"pullDownAction\" @on-pullup=\"pullUpAction\"&gt; &lt;div class=\"f-flex f-flexr item\" v-for=\"item in matchList\"&gt; &lt;div class=\"f-flex1 itemc\"&gt;&#123;&#123;item.homeName&#125;&#125;&lt;/div&gt; &lt;div class=\"f-flex1 itemc\"&gt;&#123;&#123;item.awayName&#125;&#125;&lt;/div&gt; &lt;/div&gt; &lt;/cubee-pull-refresh&gt; */import XScroll from 'xscroll/build/cmd/xscroll'import PullDown from 'xscroll/build/cmd/plugins/pulldown'import Pullup from 'xscroll/build/cmd/plugins/pullup'// 下拉刷新默认配置const pulldownDefaultConfig = () =&gt; (&#123; content: '&lt;span style=\"margin-right: 10px;\"&gt;↓&lt;/span&gt;&lt;span&gt;下拉刷新&lt;/span&gt;', height: 70, autoRefresh: false, downContent: '&lt;span style=\"margin-right: 10px;\"&gt;↓&lt;/span&gt;&lt;span&gt;下拉刷新&lt;/span&gt;', upContent: '&lt;span style=\"margin-right: 10px;\"&gt;↑&lt;/span&gt;&lt;span&gt;松开即可刷新&lt;/span&gt;', loadingContent: '&lt;span style=\"width: 30px; height: 30px; display: inline-block; vertical-align: middle; background: url(http://ohy4bt9w4.bkt.clouddn.com/image/icon/icon_refresh.png) no-repeat center; background-size: 100% auto; animation: loading 0.5s infinite linear;\"&gt;&lt;/span&gt;', clsPrefix: 'xs-plugin-pulldown-'&#125;)// 上拉加载默认配置const pullupDefaultConfig = () =&gt; (&#123; content: '&lt;span&gt;&lt;/span&gt;', pullUpHeight: 50, height: 50, autoRefresh: false, downContent: '&lt;span&gt;&lt;/span&gt;', upContent: '&lt;span&gt;&lt;/span&gt;', loadingContent: '&lt;span style=\"width: 30px; height: 30px; display: block; margin: 10px auto; background: url(http://ohy4bt9w4.bkt.clouddn.com/image/icon/icon_refresh.png) no-repeat center; background-size: 100% auto; animation: loading 0.5s infinite linear;\"&gt;&lt;/span&gt;', clsPrefix: 'xs-plugin-pullup-'&#125;)export default &#123; name: 'pull-refresh', data() &#123; return &#123; scrollId: 'scroll', &#125; &#125;, props: &#123; usePullDown: &#123; type: Boolean, default: false &#125;, usePullUp: &#123; type: Boolean, default: false &#125;, pulldownConfig: &#123; type: Object, default () &#123; return &#123;&#125; &#125; &#125;, pullupConfig: &#123; type: Object, default () &#123; return &#123;&#125; &#125; &#125;, &#125;, methods: &#123; // 初始化iscroll _init() &#123; this.xscroll = new XScroll(&#123; renderTo: \"#\" + this.scrollId, lockX: true, scrollbarX: false &#125;); if(this.usePullDown) &#123; let config = Object.assign(pulldownDefaultConfig(), this.pulldownConfig); this.pulldown = new PullDown(config) ; this.xscroll.plug(this.pulldown); this.pulldown.on('loading', (e) =&gt; &#123; this.$emit('on-pulldown') &#125;) &#125; if(this.usePullUp) &#123; let config = Object.assign(pullupDefaultConfig(), this.pullupConfig); this.pullup = new Pullup(config) ; this.xscroll.plug(this.pullup); this.pullup.on('loading', (e) =&gt; &#123; this.$emit('on-pullup') &#125;) &#125; this.xscroll.render(); &#125;, refresh() &#123; // 下拉刷新 this.pulldown.reset(() =&gt; &#123; this.reset() &#125;) &#125;, loadMore() &#123; // 上拉加载 this.pullup.complete(); this.reset(); &#125;, reset() &#123; // 重置滚动条 setTimeout(() =&gt; &#123; this.xscroll &amp;&amp; this.xscroll.render() &#125;) &#125; &#125;, mounted() &#123; this.scrollId = 'scroll' + new Date().getTime(); this.$nextTick(() =&gt; &#123; let wrapper = document.getElementById(this.scrollId); let scroller = document.getElementById(\"container\"); let content = document.getElementById(\"xs-content\"); scroller.style.minHeight = (wrapper.clientHeight + 1) + \"px\"; content.style.minHeight = (wrapper.clientHeight + 1) + \"px\"; // 这里的操作是为了当内容的高度小于wrapper的高度是也显示滚动条 // this._init(); &#125;) &#125;&#125;&lt;/script&gt;&lt;style lang=\"sass\" scoped&gt; .m-pull-refresh &#123; font-size: 14px; .wrapper&#123; position: absolute; width:100%; height: 100%; overflow: scroll; -webkit-overflow-scrolling:touch; .xs-content &#123; height: 100%; &#125; &#125; &#125; @-webkit-keyframes loading &#123; from &#123; -webkit-transform: rotate(0deg) translateZ(0); &#125; to &#123; -webkit-transform: rotate(360deg) translateZ(0); &#125; &#125; @keyframes loading &#123; from &#123; transform: rotate(0deg) translateZ(0); &#125; to &#123; transform: rotate(360deg) translateZ(0); &#125; &#125;&lt;/style&gt;","tags":[{"name":"vue2.0 下拉刷新 上拉加载","slug":"vue2-0-下拉刷新-上拉加载","permalink":"//H_MZ.me/tags/vue2-0-下拉刷新-上拉加载/"}]},{"title":"vue2.0 router 切换动画","date":"2016-12-16T15:45:34.000Z","path":"posts/uncategorized/2016-12-16-vue2.0 router切换动画.html","text":"对于动画vue2.0 提供了 transition 的封装组件，在下列情形中，可以给任何元素和组件添加 entering/leaving 过渡 条件渲染 （使用 v-if）条件展示 （使用 v-show）动态组件组件根节点 app.vue123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203&lt;template&gt; &lt;div id=\"app\" class=\"g-body\"&gt; &lt;div class=\"g-main\"&gt; &lt;transition :name=\"viewAnimate\"&gt; &lt;keep-alive&gt; &lt;router-view&gt;&lt;/router-view&gt; &lt;/keep-alive&gt; &lt;/transition&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import &#123; mapGetters, mapActions&#125; from 'vuex';export default &#123; name: 'app', data() &#123; return &#123; isLoading: false, viewAnimate: '' &#125; &#125;, computed: mapGetters(&#123; direction: 'getDirection' &#125;), watch: &#123; '$route': function(val, oldVal) &#123; console.log('------------监听到路由变化---------',this.direction); if (this.direction === 'forward') &#123; this.viewAnimate = 'slide-in'; &#125; else &#123; this.viewAnimate = 'slide-out'; &#125; &#125; &#125;&#125;&lt;/script&gt;&lt;style lang=\"sass\"&gt; html, body &#123; height: 100%; &#125; .g-body &#123; height: 100%; position: relative; overflow: hidden; .g-main &#123; height: 100%; .view &#123; position: absolute; top: 0; bottom: 0; left: 0; right: 0; width: 100%; background: #fff; &#125; &#125; &#125; /** * vue-router transition */ .slide-in-enter-active &#123; z-index: 2; visibility: visible; -webkit-animation-duration: 0.4s; animation-duration: 0.4s; -webkit-animation-name: slide-in-enter; animation-name: slide-in-enter; &#125; .slide-in-leave-active &#123; z-index: 1; visibility: visible; -webkit-animation-duration: 0.4s; animation-duration: 0.4s; -webkit-animation-name: slide-in-leave; animation-name: slide-in-leave; &#125; .slide-out-enter-active &#123; z-index: 1; -webkit-animation-duration: 0.4s; animation-duration: 0.4s; -webkit-animation-name: slide-out-enter; animation-name: slide-out-enter; &#125; .slide-out-leave-active &#123; z-index: 2; -webkit-animation-duration: 0.4s; animation-duration: 0.4s; -webkit-animation-name: slide-out-leave; animation-name: slide-out-leave; &#125; .slide-in-enter &#123; visibility: hidden; -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); &#125; .slide-out-enter &#123; visibility: hidden; -webkit-transform: translate3d(-100%, 0, 0); transform: translate3d(-100%, 0, 0); &#125; @-webkit-keyframes slide-in-enter &#123; from &#123; -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); &#125; to &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; &#125; @keyframes slide-in-enter &#123; from &#123; -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); &#125; to &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; &#125; @-webkit-keyframes slide-in-leave &#123; from &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; to &#123; -webkit-transform: translate3d(-33%, 0, 0); transform: translate3d(-33%, 0, 0); &#125; &#125; @keyframes slide-in-leave &#123; from &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; to &#123; -webkit-transform: translate3d(-33%, 0, 0); transform: translate3d(-33%, 0, 0); &#125; &#125; @-webkit-keyframes slide-out-enter &#123; from &#123; -webkit-transform: translate3d(-33%, 0, 0); transform: translate3d(-33%, 0, 0); &#125; to &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; &#125; @keyframes slide-out-enter &#123; from &#123; -webkit-transform: translate3d(-33%, 0, 0); transform: translate3d(-33%, 0, 0); &#125; to &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; &#125; @-webkit-keyframes slide-out-leave &#123; from &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; to &#123; -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); &#125; &#125; @keyframes slide-out-leave &#123; from &#123; -webkit-transform: translate3d(0, 0, 0); transform: translate3d(0, 0, 0); &#125; to &#123; -webkit-transform: translate3d(100%, 0, 0); transform: translate3d(100%, 0, 0); &#125; &#125;&lt;/style&gt; indexRouter.js12345678910111213/*** * 全局钩子函数 ***/// 视图切换动画逻辑const commit = IndexStore.commit || IndexStore.dispatch;router.afterEach(route =&gt; &#123; setTimeout(function() &#123; var direction = 'forward'; commit('SET_DIRECTION', &#123; direction &#125;); &#125;, 50)&#125;)","tags":[{"name":"vue2.0 router 动画","slug":"vue2-0-router-动画","permalink":"//H_MZ.me/tags/vue2-0-router-动画/"}]}]